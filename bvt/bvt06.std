------------------------------------------------------------
/* bvt06.h
**
**	Generated by Cobol-to-C compiler from bvt06.cob.
*/

------------------------------------------------------------
/* bvt06.c
**
**	Generated by Cobol-to-C compiler from bvt06.cob.
*/

#include <stdio.h>
#include <string.h>
#include <cobfunc.h>
#include "bvt06.h"

char _space_var [201];
long int _zero_var = 0;
long int _index = 0;

const long int _pi__FirstParagraph = 0;
long int _cpi;

/* This program is called test-program */

struct {
    long int entry_one;
    char filler000 [2];
    long int entry_two;
    char filler001 [2];
    long int entry_three;
    char filler002 [2];
    long int entry_four;
    char filler003 [2];
    long int entry_five;
} various_numbers;

struct {
    double other_one;
    char filler004 [2];
    double other_two;
    char filler005 [2];
    double other_three;
    char filler006 [2];
    double other_four;
    char filler007 [2];
    double other_five;
} other_numbers;

void _SetVarValues (void)
{
    memset (_space_var, ' ', 200);
    _space_var[200] = 0;
    various_numbers.entry_one = 12345;
    _AssignVarString (various_numbers.filler000, _space_var, 1, 200);
    various_numbers.entry_two = 12345;
    _AssignVarString (various_numbers.filler001, _space_var, 1, 200);
    various_numbers.entry_three = 12345;
    _AssignVarString (various_numbers.filler002, _space_var, 1, 200);
    various_numbers.entry_four = 12.30;
    _AssignVarString (various_numbers.filler003, _space_var, 1, 200);
    various_numbers.entry_five = 239847;
    other_numbers.other_one = 12345;
    _AssignVarString (other_numbers.filler004, _space_var, 1, 200);
    other_numbers.other_two = 12345;
    _AssignVarString (other_numbers.filler005, _space_var, 1, 200);
    other_numbers.other_three = 12345;
    _AssignVarString (other_numbers.filler006, _space_var, 1, 200);
    other_numbers.other_four = 12.30;
    _AssignVarString (other_numbers.filler007, _space_var, 1, 200);
    other_numbers.other_five = 239847;
}

int _FirstParagraph (void)
{
    fprintf (stdout, " ,123.45  ,123.00  123.45  ,   .12 $ ,  2,398.47");
    fprintf (stdout, "\n");
    fprintf (stdout, "------------------------------------------------");
    fprintf (stdout, "\n");
    _WriteIntegerVar (stdout, various_numbers.entry_one, "9,999.99");
    _WriteStringVar (stdout, various_numbers.filler000, "x");
    _WriteIntegerVar (stdout, various_numbers.entry_two, "9,999.zz");
    _WriteStringVar (stdout, various_numbers.filler001, "x");
    _WriteIntegerVar (stdout, various_numbers.entry_three, "9999.99");
    _WriteStringVar (stdout, various_numbers.filler002, "x");
    _WriteIntegerVar (stdout, various_numbers.entry_four, "9,999.99");
    _WriteStringVar (stdout, various_numbers.filler003, "x");
    _WriteIntegerVar (stdout, various_numbers.entry_five, "$9,999,999.99");
    fprintf (stdout, "\n");
    fprintf (stdout, " ");
    fprintf (stdout, "\n");
    fprintf (stdout, "2,345.00 2,345.00 2345.00  , 12.30 $ ,239,847.00");
    fprintf (stdout, "\n");
    fprintf (stdout, "------------------------------------------------");
    fprintf (stdout, "\n");
    _WriteFloatVar (stdout, other_numbers.other_one, "9,999v99");
    _WriteStringVar (stdout, other_numbers.filler004, "x");
    _WriteFloatVar (stdout, other_numbers.other_two, "9,999v00");
    _WriteStringVar (stdout, other_numbers.filler005, "x");
    _WriteFloatVar (stdout, other_numbers.other_three, "9999v99");
    _WriteStringVar (stdout, other_numbers.filler006, "x");
    _WriteFloatVar (stdout, other_numbers.other_four, "9,999v99");
    _WriteStringVar (stdout, other_numbers.filler007, "x");
    _WriteFloatVar (stdout, other_numbers.other_five, "$9,999,999v99");
    fprintf (stdout, "\n");
    return(1);
}


int main ()
{
    _SetVarValues();

    _cpi = _pi__FirstParagraph;
    while (_cpi <= 0)
    {
        switch (_cpi)
        {
            case 0: _cpi += _FirstParagraph (); break;
            default:
                    fprintf (stderr, "Broken paragraph chain!\n");
                    _cpi = 1;
                    break;
        }
    }

    return (0);
}
------------------------------------------------------------
 ,123.45  ,123.00  123.45  ,   .12 $ ,  2,398.47
------------------------------------------------
 ,123.45  ,123.00  123.45  ,   .12 $ ,  2,398.47
 
2,345.00 2,345.00 2345.00  , 12.30 $ ,239,847.00
------------------------------------------------
2,345.00 2,345.00 2345.00  , 12.30 $ ,239,847.00
------------------------------------------------------------
