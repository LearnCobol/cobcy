------------------------------------------------------------
/* bvt11.h
**
**	Generated by Cobol-to-C compiler from bvt11.cob.
*/

------------------------------------------------------------
/* bvt11.c
**
**	Generated by Cobol-to-C compiler from bvt11.cob.
*/

#include <stdio.h>
#include <string.h>
#include <cobfunc.h>
#include "bvt11.h"

char _space_var [201];
long int _zero_var = 0;
long int _index = 0;

const long int _pi__FirstParagraph = 0;
long int _cpi;

/* This program is called test-program */
char name [6];

char name_print [3];

char name_3 [2];

long int getal;

double getal2;

long int teller;


void _SetVarValues (void)
{
    memset (_space_var, ' ', 200);
    _space_var[200] = 0;
}

int _FirstParagraph (void)
{
    _AssignVarString (name, "a cde", 5, 0);
    _AssignVarString (name_3, name, 1, 5);
    /* CALL is unimplemented */
    _AssignVarString (name_print, name, 2, 5);
    getal = 5000;
    getal2 = 53;
    getal = getal + 5;
    _WriteStringVar (stdout, name, "xxxxx");
    fprintf (stdout, "\n");
    _WriteStringVar (stdout, name_print, "x0bx");
    fprintf (stdout, "\n");
    _WriteStringVar (stdout, name_3, "bbbx");
    fprintf (stdout, "\n");
    _WriteIntegerVar (stdout, getal, "9,999");
    fprintf (stdout, "\n");
    _WriteFloatVar (stdout, getal2, "999v99");
    fprintf (stdout, "\n");
    fprintf (stdout, "\"");
    fprintf (stdout, "hello");
    fprintf (stdout, "\"");
    fprintf (stdout, "\"");
    fprintf (stdout, "\"");
    fprintf (stdout, "\n");
    fprintf (stdout, "hello all");
    fprintf (stdout, "\n");
    teller = 7;
    if ((teller == 7) && (teller == 10))
    {
        fprintf (stdout, "yes");
        fprintf (stdout, "\n");
    }
    if ((_Alphabetic (name)))
    {
        teller = 12;
    }
    if ((teller == 12))
    {
        fprintf (stdout, "teller is 12");
        fprintf (stdout, "\n");
    }
    else
    {
        fprintf (stdout, "teller is not 12 !");
        fprintf (stdout, "\n");
    }
    return (32001);
    return(1);
}


int main ()
{
    _SetVarValues();

    _cpi = _pi__FirstParagraph;
    while (_cpi <= 0)
    {
        switch (_cpi)
        {
            case 0: _cpi += _FirstParagraph (); break;
            default:
                    fprintf (stderr, "Broken paragraph chain!\n");
                    _cpi = 1;
                    break;
        }
    }

    return (0);
}
------------------------------------------------------------
a cde
a0  
   a
5,005
 53.00
"hello"""
hello all
teller is 12
------------------------------------------------------------
