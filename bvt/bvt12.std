------------------------------------------------------------
/* bvt12.h
**
**	Generated by Cobol-to-C compiler from bvt12.cob.
*/

------------------------------------------------------------
/* bvt12.c
**
**	Generated by Cobol-to-C compiler from bvt12.cob.
*/

#include <coblib/cobfunc.h>
#include "bvt12.h"

char _space_var [201];
long int _zero_var = 0;
long int _index = 0;

const long int _pi__FirstParagraph = 0;
long int _cpi;

/* This program is called test-program */

struct {
    long int vary;
    long int varz;
    char tok1 [19];
} varx;

void _SetVarValues (void)
{
    memset (_space_var, ' ', 200);
    _space_var[200] = 0;
    varx.varz = 60;
}

int _FirstParagraph (void)
{
    varx.vary = 8;
    if ((varx.vary == 8))
    {
        _AssignVarString (varx.tok1, "vary is eight", 18, 0);
        varx.varz = 55;
        if ((varx.varz == 55))
        {
            _WriteIntegerVar (stdout, varx.varz, "9999");
            fprintf (stdout, "\n");
            _WriteStringVar (stdout, varx.tok1, "xxxxxxxxxxxxxxxxxx");
            fprintf (stdout, "\n");
        }
    }
    varx.varz = (6 + varx.vary) / 5;
    _WriteIntegerVar (stdout, varx.varz, "9999");
    fprintf (stdout, " is not rounded");
    fprintf (stdout, "\n");
    varx.varz = _RoundResult (((double) 6 + (double) varx.vary) / (double) 5, 9999);
    _WriteIntegerVar (stdout, varx.varz, "9999");
    fprintf (stdout, " is rounded");
    fprintf (stdout, "\n");
    return(1);
}


int main (void)
{
    _SetVarValues();

    _cpi = _pi__FirstParagraph;
    while (_cpi <= 0) {
        switch (_cpi) {
            case 0: _cpi += _FirstParagraph (); break;
            default:
                    fprintf (stderr, "Broken paragraph chain!\n");
                    _cpi = 1;
                    break;
        }
    }

    return (0);
}
------------------------------------------------------------
  55
vary is eight     
   2 is not rounded
   3 is rounded
------------------------------------------------------------
