------------------------------------------------------------
/* bvt07.h
**
**	Generated by Cobol-to-C compiler from bvt07.cob.
*/

const int _pi_start_x = 1;
const int _pi_loop_x = 2;
------------------------------------------------------------
/* bvt07.c
**
**	Generated by Cobol-to-C compiler from bvt07.cob.
*/

#include <coblib/cobfunc.h>
#include "bvt07.h"

char _space_var [201];
long int _zero_var = 0;
long int _index = 0;

const long int _pi__FirstParagraph = 0;
long int _cpi;

/* This program is called test-program */
/* Written on intel486 */
/* Written for intel486 */


FILE * print_out;

struct {
    struct {
        char print_one [4];
        char print_two [2];
        char print_three [3];
        char print_four [2];
        char print_five [5];
    } print_social_security_number;
    char space_x [11];
    char print_name [36];
} print_out_record;

struct {
    long int id_number;
    char filler000 [2];
    char name [16];
    char filler001 [2];
    char address [36];
} weird_record;
long int counter;


void _SetVarValues (void)
{
    memset (_space_var, ' ', 200);
    _space_var[200] = 0;
    _AssignVarString (weird_record.filler000, _space_var, 1, 200);
    _AssignVarString (weird_record.filler001, _space_var, 1, 200);
}

int _FirstParagraph (void)
{
    return(1);
}

int start_x (void)
{
start_x:
    _OpenSequentialFile (&print_out, "output-file", "wb");
    counter = 0;
    return(1);
}

int loop_x (void)
{
loop_x:
    counter = counter + 1;
    if ((counter > 50))
    {
        return (32001);
    }
    weird_record.id_number = counter;
    _AssignVarString (weird_record.name, "Weirdo", 15, 0);
    _AssignVarString (weird_record.address, "nowhere.loopback.edu", 35, 0);
    _WriteIntegerVar (print_out, weird_record.id_number, "999");
    _WriteStringVar (print_out, weird_record.filler000, "x");
    _WriteStringVar (print_out, weird_record.name, "xxxxxxxxxxxxxxx");
    _WriteStringVar (print_out, weird_record.filler001, "x");
    _WriteStringVar (print_out, weird_record.address, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
    fprintf (print_out, "\n");
    goto loop_x;
    return(1);
}


int main (void)
{
    _SetVarValues();

    _cpi = _pi__FirstParagraph;
    while (_cpi <= 2) {
        switch (_cpi) {
            case 0: _cpi += _FirstParagraph (); break;
            case 1: _cpi += start_x(); break;
            case 2: _cpi += loop_x(); break;
            default:
                    fprintf (stderr, "Broken paragraph chain!\n");
                    _cpi = 3;
                    break;
        }
    }

    return (0);
}
------------------------------------------------------------
------------------------------------------------------------
