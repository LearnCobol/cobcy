------------------------------------------------------------
/* bvt05.h
**
**	Generated by Cobol-to-C compiler from bvt05.cob.
*/

const int _pi_start_x = 1;
const int _pi_loop_x = 2;
------------------------------------------------------------
/* bvt05.c
**
**	Generated by Cobol-to-C compiler from bvt05.cob.
*/

#include <stdio.h>
#include <string.h>
#include <cobfunc.h>
#include "bvt05.h"

char _space_var [201];
long int _zero_var = 0;
long int _index = 0;

const long int _pi__FirstParagraph = 0;
long int _cpi;

/* This program is called test-program */
/* Written on intel486 */
/* Written for intel486 */


FILE * card_in;

struct {
    char card_name [36];
    struct {
        char digits_one_to_three [4];
        char digits_four_and_five [3];
        char digits_six_to_nine [5];
    } card_social_security_number;
    char filler000 [37];
} card_in_record;

FILE * print_out;

struct {
    struct {
        char print_one [4];
        char print_two [2];
        char print_three [3];
        char print_four [2];
        char print_five [5];
    } print_social_security_number;
    char space_x [11];
    char print_name [36];
} print_out_record;

void _SetVarValues (void)
{
    memset (_space_var, ' ', 200);
    _space_var[200] = 0;
}

int _FirstParagraph (void)
{
    return(1);
}

int start_x (void)
{
start_x:
    _OpenSequentialFile (&card_in, "card-reader", "rb");
    _OpenSequentialFile (&print_out, "/tmp/cobol.prn", "wb");
    return(1);
}

int loop_x (void)
{
loop_x:
    _ReadStringVar (card_in, &card_in_record.card_name, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
    _ReadStringVar (card_in, &card_in_record.card_social_security_number.digits_one_to_three, "xxx");
    _ReadStringVar (card_in, &card_in_record.card_social_security_number.digits_four_and_five, "xx");
    _ReadStringVar (card_in, &card_in_record.card_social_security_number.digits_six_to_nine, "xxxx");
    _ReadStringVar (card_in, &card_in_record.filler000, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
    fgetc (card_in);
    if (feof (card_in))
    {
        fflush (print_out);
        system ("lpr -h /tmp/cobol.prn");
        _CloseSequentialFile (print_out);
        unlink ("/tmp/cobol.prn");
        _CloseSequentialFile (card_in);
        return (32001);
    }
    _AssignVarString (print_out_record.print_social_security_number.print_one, card_in_record.card_social_security_number.digits_one_to_three, 3, 3);
    _AssignVarString (print_out_record.print_social_security_number.print_two, "-", 1, 0);
    _AssignVarString (print_out_record.print_social_security_number.print_three, card_in_record.card_social_security_number.digits_four_and_five, 2, 2);
    _AssignVarString (print_out_record.print_social_security_number.print_four, "-", 1, 0);
    _AssignVarString (print_out_record.print_social_security_number.print_five, card_in_record.card_social_security_number.digits_six_to_nine, 4, 4);
    _AssignVarString (print_out_record.space_x, _space_var, 10, 200);
    _AssignVarString (print_out_record.print_name, card_in_record.card_name, 35, 35);
    _WriteStringVar (print_out, print_out_record.print_social_security_number.print_one, "xxx");
    _WriteStringVar (print_out, print_out_record.print_social_security_number.print_two, "x");
    _WriteStringVar (print_out, print_out_record.print_social_security_number.print_three, "xx");
    _WriteStringVar (print_out, print_out_record.print_social_security_number.print_four, "x");
    _WriteStringVar (print_out, print_out_record.print_social_security_number.print_five, "xxxx");
    _WriteStringVar (print_out, print_out_record.space_x, "xxxxxxxxxx");
    _WriteStringVar (print_out, print_out_record.print_name, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
    fprintf (print_out, "\n");
    _WriteStringVar (stdout, print_out_record.print_social_security_number.print_one, "xxx");
    _WriteStringVar (stdout, print_out_record.print_social_security_number.print_two, "x");
    _WriteStringVar (stdout, print_out_record.print_social_security_number.print_three, "xx");
    _WriteStringVar (stdout, print_out_record.print_social_security_number.print_four, "x");
    _WriteStringVar (stdout, print_out_record.print_social_security_number.print_five, "xxxx");
    _WriteStringVar (stdout, print_out_record.space_x, "xxxxxxxxxx");
    _WriteStringVar (stdout, print_out_record.print_name, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
    fprintf (stdout, "\n");
    goto loop_x;
    return(1);
}


int main ()
{
    _SetVarValues();

    _cpi = _pi__FirstParagraph;
    while (_cpi <= 2)
    {
        switch (_cpi)
        {
            case 0: _cpi += _FirstParagraph (); break;
            case 1: _cpi += start_x(); break;
            case 2: _cpi += loop_x(); break;
            default:
                    fprintf (stderr, "Broken paragraph chain!\n");
                    _cpi = 3;
                    break;
        }
    }

    return (0);
}
------------------------------------------------------------
456-82-7345          mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
456-82-7345          lllllllllllllllllllllllllllllllllll
456-82-7345          emeememeememeememeememeememeememeem
856-82-7345          88888888888888888888888888888888888
456-82-7345          ttttttttttttttttttttttttttttttttttt
------------------------------------------------------------
