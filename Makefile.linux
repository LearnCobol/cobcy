###############################################################################
#
# Makefile for CobCy (Linux version)
# 
###############################################################################

PACKAGE = CobCy
VERSION = 04

CXX	= gcc
CC	= gcc

AR	= ar cr
RANLIB	= ar s

INCDIR	= -I./adtlib/include
LIBDIR	= -L./adtlib/lib

#WARN	= -w
#OPTIM	= -O6 -DNDEBUG

WARN	= -Wall
OPTIM	= -g -fno-implicit-templates

DEFS	= -DCAN_HAVE_STDIO -DYY_NO_UNPUT -DNOCURSES

CFLAGS	= $(WARN) $(OPTIM) $(INCDIR) $(DEFS)
LDFLAGS	= $(LIBDIR)

LEX	    = flex
YACC	= bison -y 

LFLAGS  = 
YFLAGS  = -d

LIBS	= -ladt -lstdc++

EXE	= cobcy

SRCS	= \
    main.cc semdecl.cc semutil.cc semarith.cc seminfo.cc \
	seminit.cc semfile.cc semconio.cc semcontrol.cc symbase.cc \
	symconst.cc symfile.cc sympic.cc symrec.cc symvar.cc \
	semscreen.cc symscreen.cc templates.cc \
	cobfunc.c
OBJS	= \
    main.o semdecl.o semutil.o semarith.o seminfo.o \
	seminit.o semfile.o semconio.o semcontrol.o \
	symbase.o symconst.o symdata.o symfile.o symlabel.o \
	sympic.o symrec.o symvar.o semscreen.o templates.o \
	symscreen.o cobol_lex.o cobol_yacc.o 

CLIB	= libcobol.a
COBJS	= cobfunc.o
DBFOBJS	= dbf/dbf.o dbf/ndx.o

ADTLIB	= adtlib.a

#############################################

all:	$(ADTLIB) $(EXE) $(CLIB)

$(ADTLIB): 
	@echo Building base classes ...
	@make -C adtlib/src install

$(EXE):	$(OBJS)
	@echo Linking cobcy ...
	@$(CXX) $(LDFLAGS) -o $(EXE) $(OBJS) $(LIBS)

cobol_lex.cc:	cobol_lex.l y.tab.h
	@echo Building lexical analyzer ...
	@$(LEX) -t $< > $@

cobol_yacc.cc:	cobol_yacc.y
	@echo Building parser ...
	@$(YACC) $<
	@mv y.tab.c $@

y.tab.h:
	@echo Updating parser symbol defs ...
	@$(YACC) -d cobol_yacc.y
	@rm -f y.tab.c

$(CLIB):	$(COBJS)
	@echo Making DBF objects ...
	@make -C dbf
	@echo Building cobcy runtime library ...
	@rm -f $(CLIB)
	@$(AR) $(CLIB) $(COBJS) $(DBFOBJS)
	@$(RANLIB) $(CLIB)

cobfunc.o:	cobfunc.c
	@echo Compiling $< ...
	@$(CC) $(CFLAGS) -c $<

.cc.o:
	@echo Compiling $< ...
	@$(CXX) $(CFLAGS) -c $<
.c.o:
	@echo Compiling $< ...
	@$(CXX) $(CFLAGS) -c $<

depend:
	@echo Generating dependencies ...
	@$(CXX) $(CFLAGS) -MM $(SRCS) > .depend
	@make -C adtlib/src depend
	@make -C dbf depend

clean:
	@rm -f $(OBJS) .depend *.bak *~ *.d y.tab.h cobol_lex.cc cobol_yacc.cc core
	@rm -f $(COBJS)

cleanall: clean
	@rm -f $(EXE) $(CLIB)
	@rm -f $(ADTLIB)
	@make -C adtlib/src clean
	@make -C dbf clean

ifeq (.depend,$(wildcard .depend))
include .depend
endif

